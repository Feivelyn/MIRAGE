class CAckServerLostWindow inherit CStateUIWnd
	
	var ^CDesktop			m_pxDesktop;
	var ^CStaticCtrl		m_pxAckText;
	var ^CStaticCtrl		m_pxAddErrorText;
	var ^CButton			m_pxAck;
	
	var int					m_iPrevState; // state from where the window came	
	
	export constructor()
		if(!InitFromResource("UI/AckServerLostWindow","AckServerLostWindow")) then
			return;
		endif;
		m_pxDesktop=CClientWrap.GetDesktop();
		SetPos(m_pxDesktop^.GetWidth()/2 - GetWidth()/2,m_pxDesktop^.GetHeight()/2 - GetHeight()/2);
		m_pxAckText=cast<CStaticCtrl>(GetControl("AckServerLostText"));
		m_pxAckText^.SetVisible(true);
		m_pxAck=cast<CButton>(GetControl("Ack"));
		m_pxAck^.SetVisible(true);
		m_pxAck^.SetText(CLocalizer.Get().Translate("OK"));
		m_pxAck^.m_xOnClick=OnAck;
		SetCmd("Commit", OnAck );
		AddAccelerator("RETURN,NONE,Commit");
		m_iPrevState=-1;
	endconstructor;
	
	export destructor()
	enddestructor;
	
	export proc void Init(int p_iUIState)
		KLog.LogSpam("MaSc","AckServerLostWindow Init PrvState="+p_iUIState.ToString());
		m_iPrevState = p_iUIState;
		if(m_iPrevState==CUIStateMgr.STATE_INGAME)then
			m_pxAckText^.SetText(CLocalizer.Get().Translate("_AcknowledgeServerLost_ServerLost"));
			SetCaption(CLocalizer.Get().Translate("_AcknowledgeServerLostCaption_ServerLost"));
		elseif(m_iPrevState==CUIStateMgr.STATE_NEWMULTIPLAYERPREGAME)then
			if(CMultiPlayerClientMgr.Get().HasInvalidCDKey())then
				m_pxAckText^.SetText((CLocalizer.Get().Translate("_AcknowledgeServerLost_InvalidCDKey")));
			else
				m_pxAckText^.SetText((CLocalizer.Get().Translate("_AcknowledgeServerLost_ServerLostMultiPlayerUI")));
			endif;
			SetCaption(CLocalizer.Get().Translate("_AcknowledgeServerLostCaption_ServerLostMultiPlayerUI"));
		else
			m_pxAckText^.SetText(CLocalizer.Get().Translate("_AcknowledgeServerLost_ServerLost"));
			SetCaption(CLocalizer.Get().Translate("_AcknowledgeServerLostCaption_ServerLost"));
		endif;
	endproc;
	
	export proc void Init(int p_iUIState, string p_sMessage)
		m_iPrevState = p_iUIState;
		if(m_iPrevState==CUIStateMgr.STATE_INGAME)then
			m_pxAckText^.SetText(p_sMessage);
			m_pxAckText^.SetTextLineBreak(true);
		elseif(m_iPrevState==CUIStateMgr.STATE_NEWMULTIPLAYERPREGAME)then
			if(CMultiPlayerClientMgr.Get().HasInvalidCDKey())then
				m_pxAckText^.SetText(p_sMessage);
				m_pxAckText^.SetTextLineBreak(true);
			else
				m_pxAckText^.SetText(p_sMessage);
				m_pxAckText^.SetTextLineBreak(true);
			endif;
		else
			m_pxAckText^.SetText(p_sMessage);
			m_pxAckText^.SetTextLineBreak(true);
		endif;
	endproc;
	
	export proc bool OnAck()
		//L KLog.LogSpam("MaSc","AckServerLostWindow:: OnAck");
		CSoundMgrCln.SetGameIsRunning(false);
		if(m_iPrevState==CUIStateMgr.STATE_INGAME)then
			CEvt_CloseGame.Send();
			CUIStateMgr.Get().SetState(CUIStateMgr.STATE_MAINMENU);
		elseif(m_iPrevState==CUIStateMgr.STATE_NEWMULTIPLAYERPREGAME)then
			if(CGameWrap.IsGameSpyGame()==true)then
				CUIStateMgr.Get().SetState(CUIStateMgr.STATE_NEWMULTIPLAYERLOBBY);
			else //Join IP or Host IP
				CUIStateMgr.Get().SetState(CUIStateMgr.STATE_MULTIPLAYERJOINIP);
			endif;
		else // worst case always go to the MAINMENU
			CEvt_CloseGame.Send();
			CUIStateMgr.Get().SetState(CUIStateMgr.STATE_MAINMENU);
		endif;
		return true;
	endproc
	
endclass;

