///CAiTaskWatercrossing
class CAiTaskWatercrossing inherit CAiTask
	
	var ^CAiBrain				m_pxBrain;
	var ^CAiSensor				m_pxSensor;
	static var CAiMap 			ms_xCostMap;
	var CAiMap 					m_xInvalidMap;	
	var CAiArea 				m_xMaxArea;
	var ^CAiSolution 			m_pxSolution;	
	var CAiObjWrap				m_xTarget;
	var CAiConstructionInfoPtr 	m_pxBuild;	
	var ^CAiTechTree 			m_pxTT;
	var int						m_iMaxChkPointTimeouts;
	var vec3					m_vIslandPos;
	var vec3					m_vTargetPos;
	var string					m_sTribe;
	var CAiTaskBuildSquad		m_xAllocator;
	var int						m_iPlayerID;
	var string					m_sPlayerID;
		
	//constructor
	export constructor()
	endconstructor;
	
	
	//destructor
	export destructor()
	enddestructor;
	
	
	//init
	export proc void Init(^CAiGoal p_pxGoal, vec3 p_vIslandPos)
		super.Init(p_pxGoal);
		if(p_pxGoal==null)then return; endif;
				
		m_pxBrain = GetGoal()^.GetAiBrain(); 
		if(m_pxBrain==null)then return; endif;
		
		m_pxSensor=^(m_pxBrain^.GetSensor());
		if(m_pxSensor==null) then return; endif;
		
		m_iPlayerID=m_pxBrain^.GetPlayerId();
		m_sPlayerID=m_iPlayerID.ToString();
		
//		var int iNumPlayers=1+m_pxSensor^.GetNumPlayers();
//		var int iType = 1+Random.GetInt()%iNumPlayers;
		var int iType = 1;
		
		var ^CAiModuleControlDefault pxCM=cast<CAiModuleControlDefault>(m_pxBrain^.GetControlModule());
		SetThinkWait(pxCM^.GetDifficultyInt()+iType);
		
		m_iMaxChkPointTimeouts = 10;
	endproc;
	
	
	//called on start
	export proc bool Start()
		SetStarted();
		return true;;
	endproc;


	//called to shut
	export proc void Shut()
		Abort();
	endproc;
	

	//called when thinking
	export proc void Think()
		if(m_xAllocator.IsRunning())then
			
		endif;
	endproc;
	
	//called to destroy allocation
	export proc void EvtAllocationReached(int p_iAllocation, int p_iUnitIndex)
		SetCompleted();
	endproc;
	

	//EvtRequestFailed
	export proc void EvtRequestFailed(^CAiRequestInfo p_pxInfo)
		Abort();
	endproc;
	
	
	//EvtRequestSucceeded
	export proc void EvtRequestComplete(^CAiRequestInfo p_pxInfo)
	endproc;
	
	//EvtRequestSucceeded
	export proc void EvtRequestSucceeded(^CAiRequestInfo p_pxRequest)
	endproc;
	
endclass;