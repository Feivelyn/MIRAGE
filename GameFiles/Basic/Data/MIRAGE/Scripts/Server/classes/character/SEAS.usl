class CSEAS inherit CCharacter

	export const string STIMPACK = "/Filters/SEAS/Upgrades/seas_laboratory/marine_stimpack";
	const int TIMER_STIMPACK = 40020;
	const real STIMDMG = 40.0f;

	export constructor()
	endconstructor;
	
	export destructor()
	enddestructor;
	
//	export proc void Save(^CUOFWriterNode p_pxWriterNode)
//		super.Save(p_pxWriterNode);
//		var CFourCC xBase="SeIn";
//		var ^CUOFWriterNode pxWalk=p_pxWriterNode^.AddSubChunk(xBase,1);
//		var ^CArc pxArc=^(pxWalk^.GetArc());
//		pxWalk^.Close();
//	endproc;
	
//	export proc void Load(^CUOFReaderNode p_pxReaderNode)
//		if(p_pxReaderNode^.GetType()=="SeIn")then
//			var ^CArc pxArc=^(p_pxReaderNode^.GetArc());
//		else
//			super.Load(p_pxReaderNode);
//		endif;
//	endproc;
	
	export proc CFourCC GetProjectileLink()
		var CFourCC xLink = "NONE";
		return xLink;
	endproc;
	
	export proc void ReactToGamePlayCommand(string p_sCommand, ^CGameObj p_pxObject, vec3 p_vPos, string p_sMiscParams, bool p_bQ, bool p_bS, bool p_bA)
		if(m_bIllusion)then
			return super.ReactToGamePlayCommand(p_sCommand,p_pxObject,p_vPos,p_sMiscParams,p_bQ,p_bS,p_bA);
		endif;
		if(IsTrapped() &&
			!(p_sMiscParams.Find("/Kill")!=-1||p_sCommand=="Kill") &&
			!(p_sCommand=="setlevel"||p_sMiscParams.Find("/LevelUp")!=-1)
			)then return; endif;
		if(GetTransportObj().IsValid()&&!(p_sCommand=="setlevel"||p_sMiscParams.Find("/LevelUp")!=-1||p_sMiscParams.Find("/LeaveTransport")>=0||p_sMiscParams.Find("/stimpack")!=-1))then return; endif;
		if(p_sCommand=="Action")then
			if(p_sMiscParams.Find("/stimpack")!=-1)then
				Stimpack();
			else
				super.ReactToGamePlayCommand(p_sCommand,p_pxObject,p_vPos,p_sMiscParams,p_bQ,p_bS,p_bA);
			endif;
		else
			super.ReactToGamePlayCommand(p_sCommand,p_pxObject,p_vPos,p_sMiscParams,p_bQ,p_bS,p_bA);
		endif;
	endproc;
	
	export proc void Stimpack()
		if(GetClassName()=="seas_medic")then return; endif;
		if(m_bStimpack)then return; endif;
		if(GetHitpoints()<=STIMDMG)then return; endif;
		if(HasTimer(TIMER_STIMPACK))then DeleteTimer(TIMER_STIMPACK); endif;
		var real fDuration=10.0f;
		DecraseHP(STIMDMG);
		InvokeGenericSCEvent(44,5.0);
//		var CObjHndl xHndl = AddFX("aura_stimpack", -1.0);
//		var CFourCC xLink;
//		if(xHndl.IsValid())then
//			xHndl.GetObj()^.LinkAction(GetHandle(),xLink);
//		endif;
		StimUnit(true);
		CreateTimer(TIMER_STIMPACK,CGameTimeSpan.OneSecond() * fDuration, false);
		return;
	endproc;
	
	export proc void HandleEvent(ref CGameEvtPtr p_rxEvtPtr)
		if(p_rxEvtPtr.GetClass() == ms_xTimerClass)then
			var int iTimerID = p_rxEvtPtr.GetInt(0);
			if(iTimerID == TIMER_STIMPACK)then
				StimUnit(false);
				InvokeGenericSCEvent(28,2.0f);
//				RemoveFX("aura_stimpack");
			else
				super.HandleEvent(p_rxEvtPtr);
			endif;
		else
			super.HandleEvent(p_rxEvtPtr);
		endif;
	endproc;
	
endclass;
