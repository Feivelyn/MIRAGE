class CFeedbackEventMgr

	class CFeedbackEventMgrTick inherit CEvtSink
	
		var int m_iOwner;
		var int m_iTimer;
		export var procref <void,int> m_xOnTick;
		
		export constructor()
			m_xOnTick = OnTick;
			m_iTimer = -1;
		endconstructor;

		destructor()
			if(m_iTimer!=-1)then
				CTimeMgr.Get().GetTimer(m_iTimer)^.Unsubscribe(this);
				CTimeMgr.Get().DeleteTimer(m_iTimer);
			endif;
		enddestructor;

		proc void OnTick(int p_iID)
		endproc;
		
		export proc void SetOwner(int p_iOwner)
			m_iOwner = p_iOwner;
		endproc;
		
		export proc bool OnPush(ref CEvtPointer  p_rxEP)
			m_xOnTick.Call(m_iOwner);
			if(m_iTimer!=-1)then
				CTimeMgr.Get().GetTimer(m_iTimer)^.Unsubscribe(this);
				CTimeMgr.Get().DeleteTimer(m_iTimer);
			endif;
			m_iTimer = -1;
			return true;
		endproc;
		
		export proc void SetTimer(real p_fDuration)
			if(m_iTimer==-1)then
				m_iTimer = CTimeMgr.Get().CreateTimer(CGameTimeSpan.OneSecond() * p_fDuration, false);
				CTimeMgr.Get().GetTimer(m_iTimer)^.Subscribe(this);
			endif;
		endproc;
	
		export proc int GetTimer()
			return m_iTimer;
		endproc;
	
	endclass;
	
	static var ^CFeedbackEventMgr		ms_pxInst;

	var array ^CFeedbackEventMgrTick	m_apxTimer;
	var array CObjList					m_axAttackMsg;

	export static proc ref CFeedbackEventMgr Get()
		if(ms_pxInst==null)then
			ms_pxInst = new CFeedbackEventMgr;
		endif;
		return(ms_pxInst^);
	endproc;

	export static proc void Kill()
		if(ms_pxInst!=null)then
			delete ms_pxInst;
			ms_pxInst = null;
		endif;
	endproc;

	constructor()
		m_axAttackMsg = 8;
		m_apxTimer = 8;
		var int i, iC = m_apxTimer.NumEntries();
		for(i=0)cond(i<iC)iter(i++)do
			m_apxTimer[i] = new CFeedbackEventMgrTick();
			m_apxTimer[i]^.m_xOnTick = SendEvents;
		endfor;
	endconstructor;
	
	proc void SendEvents(int p_iOwner)
		if(m_axAttackMsg[p_iOwner].NumEntries()!=0)then
			var int i, iC = m_axAttackMsg[p_iOwner].NumEntries();
			var int iCount = 0;
			var vec3 vCenter;
			for(i=0)cond(i<iC)iter(i++)do
				var ^CGameObj pxObj = m_axAttackMsg[p_iOwner][i].GetObj();
				if(pxObj!=null)then
					vCenter += pxObj^.GetPos();
					iCount++;
				endif;
			endfor;
			vCenter /= iCount.ToReal();
			CSrvWrap.SendGenericEvtToPlayer(p_iOwner, "MiniMapAttack\t"+vCenter.ToString()+"\tAttack");
			// clear list of attacked things
			m_axAttackMsg[p_iOwner]=0;
		endif;
	endproc;

	export proc void AddAttackEvent(CObjHndl p_xHndl, int p_iOwner)
		if(p_iOwner==-1)then return; endif;
		m_axAttackMsg[p_iOwner].Include(p_xHndl);
		m_apxTimer[p_iOwner]^.SetTimer(0.15);
	endproc;

	export proc void AddFinishedEvent(CObjHndl p_xHndl, int p_iOwner)
		if(p_iOwner==-1)then return; endif;
		var ^CGameObj pxObj = p_xHndl.GetObj();
		if(pxObj!=null)then
			CSrvWrap.SendGenericEvtToPlayer(p_iOwner, "MiniMapFinish\t"+pxObj^.GetPos().ToString()+"\tFinished");
		endif;
	endproc;

endclass;